### Registro de Usuario
# Probado y funcionando
POST http://localhost:3000/api/users/register
Content-Type: application/json

{
    "email": "nico2@email.com",
    "password": "12345678"
}

### Validación del Email
# Probado y funcionando
PUT http://localhost:3000/api/users/validate-email
Content-Type: application/json
Authorization: Bearer <token>

{
    "code": "931562"
}

### Login de Usuario
# Probado y funcionando
POST http://localhost:3000/api/users/login
Content-Type: application/json

{
    "email": "nico2@email.com",
    "password": "12345678"
}

### Onboarding (Datos Personales)
# Probado y funcionando
PUT http://localhost:3000/api/users/onboarding/personal-info
Content-Type: application/json
Authorization: Bearer <token>

{
    "name": "Juan",
    "lastName": "Pérez",
    "nif": "12345678X"
}

### Onboarding (Datos de la Compañía)
# Probado y funcionando
PUT http://localhost:3000/api/users/onboarding/company-info
Content-Type: application/json
Authorization: Bearer <token>

{
    "name": "Empresa Ejemplo",
    "cif": "B12345678",
    "address": "Calle Principal 123"
}

### Subida de Logo en Local
# Probado y funcionando
POST http://localhost:3000/api/storage/local
Content-Type: multipart/form-data; boundary=boundary123

--boundary123
Content-Disposition: form-data; name="image"; filename="logo.png"
Content-Type: image/png

< ./full_logo_blc.png
--boundary123--

### Obtener Perfil del Usuario
# Probado y funcionando
GET http://localhost:3000/api/users/profile
Authorization: Bearer <token>

### Eliminar Usuario (Hard Delete)
# Probado y funcionando
DELETE http://localhost:3000/api/users/delete?type=hard
Authorization: Bearer <token>

### Eliminar Usuario (Soft Delete)
# Probado y funcionando
DELETE http://localhost:3000/api/users/delete?type=soft
Authorization: Bearer <token>

### Solicitar recuperación de contraseña
# Probado y funcionando
POST http://localhost:3000/api/users/request-password-reset
Content-Type: application/json

{
    "email": "nico2@email.com"
}

### Restablecer contraseña
# Probado y funcionando
POST http://localhost:3000/api/users/reset-password
Content-Type: application/json

{
    "email": "nico2@email.com",
    "code": "626940",
    "password": "nuevaContraseña123"
}

### Invitar a un compañero
# Probado y funcionando
POST http://localhost:3000/api/users/invite
Content-Type: application/json
Authorization: Bearer <token>

{
    "email": "nuevo-invitado@email.com"
}

### Registro del invitado
# Probado y funcionando
POST http://localhost:3000/api/users/register-invited
Content-Type: application/json

{
    "token": "<token de invitación>",
    "password": "passwordSeguro123"
}